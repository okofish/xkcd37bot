#upstart-single-test-api

# Generated by node-foreman

description "upstart-single-test-api service"

# Automatic start/stop based on upstart-single-test, which starts on bootup
# To manually start/stop only this job:
# /sbin/initctl start upstart-single-test-api
# /sbin/initctl stop upstart-single-test-api
start on starting upstart-single-test
stop  on stopping upstart-single-test
respawn

# Configuration for this daemon
env port="80"
env bind="0.0.0.0"
env mysql_host="localhost"
env mysql_user="toast"
env mysql_pass="peanutbutter"
env PATH="TEST_PATH"


# Not supported by older versions of Upstart, like on RHEL/CentOS
chdir TEST_DIR
setuid test-user
setgid test-user

# Arbitrarily high limit on number of open file descriptors
limit nofile 50000 50000

# Enable core dumps
limit core unlimited unlimited

# How to run the application
script

    # Abort if some part of this script fails
    set -e

    # Temporary fifo for sending log output to
    mkfifo /tmp/upstart-single-test-api-log-fifo

    # A logger instance that pipes the fifo to syslog
    ( logger -t upstart-single-test-api </tmp/upstart-single-test-api-log-fifo & )

    # Redirect the current process's stdout to the logger
    exec >/tmp/upstart-single-test-api-log-fifo

    # Clean up the fifo so we don't leave it laying around
    rm /tmp/upstart-single-test-api-log-fifo

    # Run our actual application
    #  - exec used instead of setuid, see comment above
    #  - stderr redirection is done last so that we don't lose error messages
    #    related to the Upstart config itself
    # Uncomment and use this line if you are using an older version of Upstart
    #exec su -m -s /bin/sh -c 'exec "$0" "$@"' test-user -- npm start 2>&1
    exec node server.js 10000 2>&1

end script
